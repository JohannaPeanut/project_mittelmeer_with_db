"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _prngProxy = _interopRequireDefault(require("../../../prng/prngProxy"));

var _murmur = _interopRequireDefault(require("../../hash/murmur3"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var murmur3Hash = new _murmur["default"]();
var isRunningInNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
var MAX_RANDOM1_VALUE = 0xFFFF;
var MAX_SEQUENCE_VALUE = 0xFF;
var SONYFLAKE_TIMEUNIT = 10;
var SONYFLAKE_START_TIME = 1409529600000;
var SONYFLAKE_OVERFLOW_VALUE = 549755813887;

var RandomSonyflakeGenerator = /*#__PURE__*/function () {
  function RandomSonyflakeGenerator() {
    _classCallCheck(this, RandomSonyflakeGenerator);

    this.sequence = 0;
    this.startTime = this._toSonyflakeTime(SONYFLAKE_START_TIME);
    this.elapsedTime = 0;
    this.need_random1 = true;

    if (isRunningInNode) {
      var os = require('os');

      if (os.hostname().length > 0) {
        this.need_random1 = false;
        this.random1 = murmur3Hash.hash(os.hostname(), 0) & MAX_RANDOM1_VALUE;
      }
    }
  }

  _createClass(RandomSonyflakeGenerator, [{
    key: "generateRandom",
    value: function generateRandom() {
      this._generateRandom1IfNeeded(_prngProxy["default"].random());

      return this._getSonyflake();
    }
  }, {
    key: "generateNext",
    value: function generateNext() {
      this._generateRandom1IfNeeded(_prngProxy["default"].next());

      return this._getSonyflake();
    }
  }, {
    key: "_getSonyflake",
    value: function _getSonyflake() {
      var current = this._currentElapsedTime(this.startTime);

      if (this.elapsedTime < current) {
        this.elapsedTime = current;
        this.sequence = 0;
      } else {
        this.sequence = this.sequence + 1 & MAX_SEQUENCE_VALUE;

        if (this.sequence === 0) {
          this.elapsedTime += 1;
        }
      }

      if (this.elapsedTime > SONYFLAKE_OVERFLOW_VALUE) {
        throw new Error('Sonyflake UID: time overflow');
      }

      var res = this._convertTimestampToString();

      res += this._sequenceToString(this.sequence);
      res += this._decToHex(this.random1 >> 8 & 0xFF);
      res += this._decToHex(this.random1 & 0xFF);
      return res;
    }
    /**
     * @returns {string}
     * @private
     */

  }, {
    key: "_convertTimestampToString",
    value: function _convertTimestampToString() {
      var res = '';
      var ts = this.elapsedTime;

      for (var i = 0; i < 5; i += 1) {
        res = this._decToHex(ts % 256) + res;
        ts = Math.floor(ts / 256);
      }

      return res;
    }
  }, {
    key: "_generateRandom1IfNeeded",
    value: function _generateRandom1IfNeeded(random) {
      if (this.need_random1) {
        this.random1 = Math.floor(random * MAX_RANDOM1_VALUE);
      }
    }
  }, {
    key: "_toSonyflakeTime",
    value: function _toSonyflakeTime(utcTime) {
      return Math.floor(utcTime / SONYFLAKE_TIMEUNIT);
    }
  }, {
    key: "_currentElapsedTime",
    value: function _currentElapsedTime(startTime) {
      return this._toSonyflakeTime(Date.now()) - startTime;
    }
  }, {
    key: "_decToHex",
    value: function _decToHex(dec) {
      if (dec < 16) {
        return '0' + dec.toString(16);
      }

      return dec.toString(16);
    }
  }, {
    key: "_sequenceToString",
    value: function _sequenceToString(sequence) {
      if (sequence < 10) {
        return '00' + sequence.toString();
      }

      if (sequence < 100) {
        return '0' + sequence.toString();
      }

      return sequence.toString();
    }
  }]);

  return RandomSonyflakeGenerator;
}();

var _default = RandomSonyflakeGenerator;
exports["default"] = _default;