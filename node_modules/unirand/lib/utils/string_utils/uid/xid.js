"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _prngProxy = _interopRequireDefault(require("../../../prng/prngProxy"));

var _murmur = _interopRequireDefault(require("../../hash/murmur3"));

var _baseUid = _interopRequireDefault(require("./baseUid"));

var _base = require("../../encoders/base32");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MAX_RANDOM1_VALUE = 0xFFFFFF;
var MAX_RANDOM2_VALUE = 0xFFFF;
var MAX_RANDOM3_VALUE = 0xFFFFFF;
var isRunningInNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
var murmur3Hash = new _murmur["default"]();
var base32Hex = new _base.Base32Hex(true);

var RandomXidGenerator = /*#__PURE__*/function (_BaseUid) {
  _inherits(RandomXidGenerator, _BaseUid);

  var _super = _createSuper(RandomXidGenerator);

  function RandomXidGenerator() {
    var _this;

    _classCallCheck(this, RandomXidGenerator);

    _this = _super.call(this);
    _this.tsSize = _this.getTimestampSize();
    _this.need_random1 = true;
    _this.need_random2 = true;

    if (isRunningInNode) {
      var os = require('os');

      if (os.hostname().length > 0) {
        _this.need_random1 = false;
        _this.random1 = murmur3Hash.hash(os.hostname(), 0) & MAX_RANDOM1_VALUE;
      }

      _this.need_random2 = false;
      _this.random2 = process.pid & MAX_RANDOM2_VALUE;
    }

    return _this;
  }

  _createClass(RandomXidGenerator, [{
    key: "generateRandom",
    value: function generateRandom() {
      return base32Hex.encodeFromByteArray(this._randomBytesArray());
    }
  }, {
    key: "generateNext",
    value: function generateNext() {
      return base32Hex.encodeFromByteArray(this._nextBytesArray());
    }
  }, {
    key: "_randomBytesArray",
    value: function _randomBytesArray() {
      return this._getBytesArray(_prngProxy["default"].random(3));
    }
  }, {
    key: "_nextBytesArray",
    value: function _nextBytesArray() {
      var randoms = [];

      for (var i = 0; i < 3; i += 1) {
        randoms[i] = _prngProxy["default"].next();
      }

      return this._getBytesArray(randoms);
    }
  }, {
    key: "_getBytesArray",
    value: function _getBytesArray(randoms) {
      var res = this._createTimestampBytesArray();

      if (this.need_random1) {
        this.random1 = Math.floor(randoms[0] * MAX_RANDOM1_VALUE);
      }

      res[this.tsSize] = this.random1 >> 16;
      res[this.tsSize + 1] = this.random1 >> 8 & 0xFF;
      res[this.tsSize + 2] = this.random1 & 0xFF;

      if (this.need_random2) {
        this.random2 = Math.floor(randoms[1] * MAX_RANDOM2_VALUE);
      }

      res[this.tsSize + 3] = this.random2 >> 8;
      res[this.tsSize + 4] = this.random2 & 0xFF;
      var random3 = Math.floor(randoms[2] * MAX_RANDOM3_VALUE);
      res[this.tsSize + 5] = random3 >> 16;
      res[this.tsSize + 6] = random3 >> 8 & 0xFF;
      res[this.tsSize + 7] = random3 & 0xFF;
      return res;
    }
  }]);

  return RandomXidGenerator;
}(_baseUid["default"]);

var _default = RandomXidGenerator;
exports["default"] = _default;